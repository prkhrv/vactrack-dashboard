{"version":3,"file":"static/js/4731.996e97fd.chunk.js","mappings":"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","sources":["views/buttons/loading-buttons/LoadingButtons.js"],"sourcesContent":["import React from 'react'\nimport { CLoadingButton, CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react-pro'\nimport { DocsExample } from 'src/components'\n\nconst LoadingButtons = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Loading Button</strong>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              CoreUI includes a buttons with built-in loading indicators. Indicate the loading state\n              of the button bridging the gap between action and feedback..\n            </p>\n            <DocsExample href=\"components/loading-button\">\n              <CRow className=\"py-4 text-center\">\n                {['primary', 'secondary', 'success', 'danger', 'warning', 'info'].map(\n                  (color, index) => (\n                    <CCol md={2} key={index}>\n                      <CLoadingButton color={color} timeout={2000}>\n                        Submit\n                      </CLoadingButton>\n                    </CCol>\n                  ),\n                )}\n              </CRow>\n              <CRow className=\"py-4 text-center\">\n                {['primary', 'secondary', 'success', 'danger', 'warning', 'info'].map(\n                  (color, index) => (\n                    <CCol md={2} key={index}>\n                      <CLoadingButton color={color} variant=\"outline\" timeout={2000}>\n                        Submit\n                      </CLoadingButton>\n                    </CCol>\n                  ),\n                )}\n              </CRow>\n              <CRow className=\"py-4 text-center\">\n                {['primary', 'secondary', 'success', 'danger', 'warning', 'info'].map(\n                  (color, index) => (\n                    <CCol md={2} key={index}>\n                      <CLoadingButton color={color} variant=\"ghost\" timeout={2000}>\n                        Submit\n                      </CLoadingButton>\n                    </CCol>\n                  ),\n                )}\n              </CRow>\n            </DocsExample>\n            <h6>Loading Buttons with grow spinner</h6>\n            <DocsExample href=\"components/loading-button#grow\">\n              <CRow className=\"py-4 text-center\">\n                {['primary', 'secondary', 'success', 'danger', 'warning', 'info'].map(\n                  (color, index) => (\n                    <CCol md={2} key={index}>\n                      <CLoadingButton color={color} spinnerType=\"grow\" timeout={2000}>\n                        Submit\n                      </CLoadingButton>\n                    </CCol>\n                  ),\n                )}\n              </CRow>\n              <CRow className=\"py-4 text-center\">\n                {['primary', 'secondary', 'success', 'danger', 'warning', 'info'].map(\n                  (color, index) => (\n                    <CCol md={2} key={index}>\n                      <CLoadingButton\n                        color={color}\n                        spinnerType=\"grow\"\n                        variant=\"outline\"\n                        timeout={2000}\n                      >\n                        Submit\n                      </CLoadingButton>\n                    </CCol>\n                  ),\n                )}\n              </CRow>\n              <CRow className=\"py-4 text-center\">\n                {['primary', 'secondary', 'success', 'danger', 'warning', 'info'].map(\n                  (color, index) => (\n                    <CCol md={2} key={index}>\n                      <CLoadingButton\n                        color={color}\n                        spinnerType=\"grow\"\n                        variant=\"ghost\"\n                        timeout={2000}\n                      >\n                        Submit\n                      </CLoadingButton>\n                    </CCol>\n                  ),\n                )}\n              </CRow>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default LoadingButtons\n"],"names":["LoadingButtons","_jsx","CRow","children","CCol","xs","_jsxs","CCard","className","CCardHeader","CCardBody","DocsExample","href","map","color","index","md","CLoadingButton","timeout","variant","spinnerType"],"sourceRoot":""}