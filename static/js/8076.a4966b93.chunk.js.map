{"version":3,"file":"static/js/8076.a4966b93.chunk.js","mappings":"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","sources":["views/smart-table/_data.js","views/smart-table/SmartTableBasixExample.js","views/smart-table/SmartTableDownloadableExample.js","views/smart-table/SmartTableSelectableExample.js","views/smart-table/SmartTable.js"],"sourcesContent":["/* eslint-disable prettier/prettier */\nconst usersData = [\n  {id: 0, name: 'John Doe', registered: '2018/01/01', role: 'Guest', status: 'Pending'},\n  {id: 1, name: 'Samppa Nori', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 2, name: 'Estavan Lykos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 3, name: 'Chetan Mohamed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 4, name: 'Derick Maximinus', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 5, name: 'Friderik Dávid', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 6, name: 'Yiorgos Avraamu', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 7, name: 'Avram Tarasios', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 8, name: 'Quintin Ed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 9, name: 'Enéas Kwadwo', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 10, name: 'Agapetus Tadeáš', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 11, name: 'Carwyn Fachtna', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 12, name: 'Nehemiah Tatius', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 13, name: 'Ebbe Gemariah', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 14, name: 'Eustorgios Amulius', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 15, name: 'Leopold Gáspár', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 16, name: 'Pompeius René', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 17, name: 'Paĉjo Jadon', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 18, name: 'Micheal Mercurius', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 19, name: 'Ganesha Dubhghall', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 20, name: 'Hiroto Šimun', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 21, name: 'Vishnu Serghei', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 22, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 23, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending'},\n  {id: 42, name: 'Ford Prefect', registered: '2001/05/25', role: 'Alien', status: 'Don\\'t panic!'}\n]\n\nexport default usersData\n","import React, { useState } from 'react'\nimport { CBadge, CButton, CCardBody, CCollapse, CSmartTable } from '@coreui/react-pro'\n\nimport data from './_data.js'\n\nconst SmartTableBasicExample = () => {\n  const [details, setDetails] = useState([])\n  const columns = [\n    {\n      key: 'name',\n      _style: { width: '40%' },\n    },\n    'registered',\n    { key: 'role', _style: { width: '20%' } },\n    { key: 'status', _style: { width: '20%' } },\n    {\n      key: 'show_details',\n      label: '',\n      _style: { width: '1%' },\n      filter: false,\n      sorter: false,\n    },\n  ]\n  const getBadge = (status) => {\n    switch (status) {\n      case 'Active':\n        return 'success'\n      case 'Inactive':\n        return 'secondary'\n      case 'Pending':\n        return 'warning'\n      case 'Banned':\n        return 'danger'\n      default:\n        return 'primary'\n    }\n  }\n  const toggleDetails = (index) => {\n    const position = details.indexOf(index)\n    let newDetails = details.slice()\n    if (position !== -1) {\n      newDetails.splice(position, 1)\n    } else {\n      newDetails = [...details, index]\n    }\n    setDetails(newDetails)\n  }\n\n  return (\n    <CSmartTable\n      sorterValue={{ column: 'name', state: 'asc' }}\n      clickableRows\n      tableProps={{\n        striped: true,\n        hover: true,\n      }}\n      activePage={3}\n      footer\n      items={data}\n      columns={columns}\n      columnFilter\n      tableFilter\n      cleaner\n      itemsPerPageSelect\n      itemsPerPage={5}\n      columnSorter\n      pagination\n      scopedColumns={{\n        status: (item) => (\n          <td>\n            <CBadge color={getBadge(item.status)}>{item.status}</CBadge>\n          </td>\n        ),\n        show_details: (item) => {\n          return (\n            <td className=\"py-2\">\n              <CButton\n                color=\"primary\"\n                variant=\"outline\"\n                shape=\"square\"\n                size=\"sm\"\n                onClick={() => {\n                  toggleDetails(item.id)\n                }}\n              >\n                {details.includes(item.id) ? 'Hide' : 'Show'}\n              </CButton>\n            </td>\n          )\n        },\n        details: (item) => {\n          return (\n            <CCollapse visible={details.includes(item.id)}>\n              <CCardBody>\n                <h4>{item.username}</h4>\n                <p className=\"text-muted\">User since: {item.registered}</p>\n                <CButton size=\"sm\" color=\"info\">\n                  User Settings\n                </CButton>\n                <CButton size=\"sm\" color=\"danger\" className=\"ml-1\">\n                  Delete\n                </CButton>\n              </CCardBody>\n            </CCollapse>\n          )\n        },\n      }}\n    />\n  )\n}\n\nexport default SmartTableBasicExample\n","import React, { useState } from 'react'\nimport { CCardBody, CButton, CSmartTable } from '@coreui/react-pro'\nimport data from './_data.js'\n\nconst SmartTableDownloadableExample = () => {\n  const [currentItems, setCurrentItems] = useState(data)\n\n  const csvContent = currentItems.map((item) => Object.values(item).join(',')).join('\\n')\n\n  const csvCode = 'data:text/csv;charset=utf-8,SEP=,%0A' + encodeURIComponent(csvContent)\n\n  return (\n    <CCardBody>\n      <CButton\n        color=\"primary\"\n        className=\"mb-2\"\n        href={csvCode}\n        download=\"coreui-table-data.csv\"\n        target=\"_blank\"\n      >\n        Download current items (.csv)\n      </CButton>\n      <CSmartTable\n        columnFilter\n        columnSorter\n        items={data}\n        itemsPerPage={5}\n        onFilteredItemsChange={setCurrentItems}\n        pagination\n      />\n    </CCardBody>\n  )\n}\n\nexport default SmartTableDownloadableExample\n","import React, { useState } from 'react'\nimport { CBadge, CCardBody, CFormCheck, CFormLabel, CSmartTable } from '@coreui/react-pro'\n\nimport data from './_data.js'\n\nconst SmartTableSelectableExample = () => {\n  const [selected, setSelected] = useState([2, 3])\n  const usersData = data.map((item, id) => {\n    const _selected = selected.includes(id)\n    return {\n      ...item,\n      id,\n      _selected,\n      _classes: [item._classes, _selected && 'table-selected'],\n    }\n  })\n\n  const check = (e, id) => {\n    if (e.target.checked) {\n      setSelected([...selected, id])\n    } else {\n      setSelected(selected.filter((itemId) => itemId !== id))\n    }\n  }\n\n  const getBadge = (status) => {\n    switch (status) {\n      case 'Active':\n        return 'success'\n      case 'Inactive':\n        return 'secondary'\n      case 'Pending':\n        return 'warning'\n      case 'Banned':\n        return 'danger'\n      default:\n        return 'primary'\n    }\n  }\n\n  return (\n    <CCardBody>\n      Selected: {JSON.stringify(selected)}\n      <CSmartTable\n        items={usersData}\n        columns={[\n          { key: 'select', label: '', filter: false, sorter: false },\n          'name',\n          'registered',\n          'role',\n          'status',\n        ]}\n        itemsPerPage={5}\n        columnFilter\n        columnSorter\n        pagination\n        scopedColumns={{\n          select: (item) => {\n            return (\n              <td>\n                <CFormCheck\n                  id={`checkbox${item.id}`}\n                  checked={item._selected}\n                  onChange={(e) => check(e, item.id)}\n                />\n                <CFormLabel variant=\"custom-checkbox\" htmlFor={`checkbox${item.id}`} />\n              </td>\n            )\n          },\n          status: (item) => (\n            <td>\n              <CBadge color={getBadge(item.status)}>{item.status}</CBadge>\n            </td>\n          ),\n        }}\n        tableProps={{\n          hover: true,\n        }}\n      />\n    </CCardBody>\n  )\n}\n\nexport default SmartTableSelectableExample\n","import React from 'react'\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react-pro'\nimport { DocsExample } from 'src/components'\n\nimport SmartTableBasixExample from './SmartTableBasixExample'\nimport SmartTableDownloadableExample from './SmartTableDownloadableExample'\nimport SmartTableSelectableExample from './SmartTableSelectableExample'\n\nconst SmartTable = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>CoreUI Smart Table</strong> <small>React Table Component</small>\n          </CCardHeader>\n          <CCardBody>\n            <DocsExample href=\"components/smart-table/\">\n              <SmartTableBasixExample />\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>CoreUI Smart Table</strong> <small>Table with selectable rows</small>\n          </CCardHeader>\n          <CCardBody>\n            <DocsExample href=\"components/smart-table/\">\n              <SmartTableSelectableExample />\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>CoreUI Smart Table</strong> <small>Table with selectable rows</small>\n          </CCardHeader>\n          <CCardBody>\n            <DocsExample href=\"components/smart-table/\">\n              <SmartTableDownloadableExample />\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default SmartTable\n"],"names":["id","name","registered","role","status","SmartTableBasicExample","details","setDetails","useState","getBadge","_jsx","CSmartTable","sorterValue","column","state","clickableRows","tableProps","striped","hover","activePage","footer","items","data","columns","key","_style","width","label","filter","sorter","columnFilter","tableFilter","cleaner","itemsPerPageSelect","itemsPerPage","columnSorter","pagination","scopedColumns","item","children","CBadge","color","show_details","className","CButton","variant","shape","size","onClick","index","position","indexOf","newDetails","slice","splice","toggleDetails","includes","CCollapse","visible","_jsxs","CCardBody","username","SmartTableDownloadableExample","currentItems","setCurrentItems","csvContent","map","Object","values","join","csvCode","encodeURIComponent","href","download","target","onFilteredItemsChange","SmartTableSelectableExample","selected","setSelected","usersData","_selected","_classes","JSON","stringify","select","CFormCheck","concat","checked","onChange","e","check","itemId","CFormLabel","htmlFor","SmartTable","CRow","CCol","xs","CCard","CCardHeader","DocsExample","SmartTableBasixExample"],"sourceRoot":""}